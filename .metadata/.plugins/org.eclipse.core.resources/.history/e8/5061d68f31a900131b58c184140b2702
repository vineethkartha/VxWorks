/* A skeleton of a block device driver in VxWorks
 * Date: 2-03-2014
 * Vineeth Kartha*/
INCLUDE_DOSFS_MAIN;
#include<vxWorks.h>
#include<taskLib.h>
#include<iosLib.h>
#include<stdio.h>
#include<semLib.h>
#include<blkIo.h>
#include<dosFsLib.h>
#include<ramDrv.h>
#include<ioLib.h>

#define DRVNAME "/myBlkDrv"

static int myblkDrv;

static int blkdrvnum=0;

typedef struct
{
	BLK_DEV my_header;

}MY_BLK_DEV;

LOCAL STATUS myBlkRd(MY_BLK_DEV* pDev,int startBlk,int numBlks,char* pBuf )
{
	printf("in read\n");
	return OK;
}
LOCAL STATUS myBlkwrt(MY_BLK_DEV* pDev,int startBlk,int numBlks,char* pBuf )
{
	printf("in write\n");
	return OK;
}

BLK_DEV *myBlkCreate()
{
	BLK_DEV *pBlkDev;
	MY_BLK_DEV *mydv;
	if ((mydv = (MY_BLK_DEV *)calloc(sizeof (MY_BLK_DEV), 1)) == NULL)
		{
		printf("\n Not Possible\n");
			return (NULL);
		}
	pBlkDev=&mydv->my_header;
	pBlkDev->bd_blksPerTrack=1;
	pBlkDev->bd_bytesPerBlk=256;
	pBlkDev->bd_ioctl=NULL;
	pBlkDev->bd_mode=O_RDONLY |O_WRONLY| O_RDWR;
	pBlkDev->bd_nBlocks=1;
	pBlkDev->bd_nHeads=1;
	pBlkDev->bd_readyChanged=TRUE;
	pBlkDev->bd_statusChk=0;
	pBlkDev->bd_removable=TRUE;
	pBlkDev->bd_reset=NULL;
	pBlkDev->bd_retry=0;
	pBlkDev->bd_blkRd=myBlkRd;
	pBlkDev->bd_blkWrt=myBlkwrt;
	return (&mydv->my_header);
}

STATUS myblkDrv_fn(void)
{
	BLK_DEV *pBlkDev; // declare your BLK_DEV structure
    DOS_VOL_DESC *pVolDesc;
    /*pBlkDev = myBlkCreate();
    if(pBlkDev==NULL)
    	printf("Error\n");
    else
    	printf("\n GOOD\n");
	return OK;*/
	
	
	//BLK_DEV               *pBlkDev; 
	//DOS_VOL_DESC          *pVolDesc; 
	//pBlkDev = ramDevCreate (0, 512, 400, 400, 0); 
	if (dosFsDevCreate ("DEV1:",NULL,1,0) == ERROR) 
	{ 
	    printErrno( ); 
	}; 
	/* if you want to format then do the following */ 
	if (dosFsVolFormat ("DEV1:", 2, NULL) == ERROR) 
	{ 
	    printErrno( ); 
	}
}
